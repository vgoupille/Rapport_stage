[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Msc Bioinformatics thesis",
    "section": "",
    "text": "A Master’s thesis submitted in partial fulfillment of the requirements for the Master degree in Bioinformatics at the University of Rennes.\nAbstract\n\nDuis ornare ex ac iaculis pretium. Maecenas sagittis odio id erat pharetra, sit amet consectetur quam sollicitudin. Vivamus pharetra quam purus, nec sagittis risus pretium at. Nullam feugiat, turpis ac accumsan interdum, sem tellus blandit neque, id vulputate diam quam semper nisl. Donec sit amet enim at neque porttitor aliquet. Phasellus facilisis nulla eget placerat eleifend. Vestibulum non egestas eros, eget lobortis ipsum. Nulla rutrum massa eget enim aliquam, id porttitor erat luctus. Nunc sagittis quis eros eu sagittis. Pellentesque dictum, erat at pellentesque sollicitudin, justo augue pulvinar metus, quis rutrum est mi nec felis. Vestibulum efficitur mi lorem, at elementum purus tincidunt a. Aliquam finibus enim magna, vitae pellentesque erat faucibus at. Nulla mauris tellus, imperdiet id lobortis et, dignissim condimentum ipsum. Morbi nulla orci, varius at aliquet sed, facilisis id tortor. Donec ut urna nisi.\nAenean placerat luctus tortor vitae molestie. Nulla at aliquet nulla. Sed efficitur tellus orci, sed fringilla lectus laoreet eget. Vivamus maximus quam sit amet arcu dignissim, sed accumsan massa ullamcorper. Sed iaculis tincidunt feugiat. Nulla in est at nunc ultricies dictum ut vitae nunc. Aenean convallis vel diam at malesuada. Suspendisse arcu libero, vehicula tempus ultrices a, placerat sit amet tortor. Sed dictum id nulla commodo mattis. Aliquam mollis, nunc eu tristique faucibus, purus lacus tincidunt nulla, ac pretium lorem nunc ut enim. Curabitur eget mattis nisl, vitae sodales augue. Nam felis massa, bibendum sit amet nulla vel, vulputate rutrum lacus. Aenean convallis odio pharetra nulla mattis consequat.\n\nKeywords :\nSingle-cell RNA-seq, Pseudomonas brassicacearum, Division Of Labor, (4-5 keywords) bacterial population, metabolism, specialization, root colonization",
    "crumbs": [
      "Front matter"
    ]
  },
  {
    "objectID": "chapters/01-Introduction.html",
    "href": "chapters/01-Introduction.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 Litterature review\ndeddfefde1,2 Internship description\nThe survival of organisms in evolving environments is driven by their fitness. The cost-benefit ratio of traits is constantly balanced and gives rise to different populational evolutionary strategies. To succeed, organisms will have to compete, cooperate and/or specialize as a result of how fit their traits are considering their biotic and abiotic environment. Bacteria are unicellular organisms with therefore little option to specialize and give up certain traits production to limit their metabolic costs, unlike multicellular organisms that present many different forms of specialized cells in one single organism. However, [[auxotrophic bacteria]] (i.e bacteria lacking genes coding for a molecule essential for their survival) have been studied (Morris et al., 2012).3\nAuxotroph bacteria can take advantage of leaky functions of helper’s organisms to fulfill their needs in specific compounds (Morris et al., 2014, Estrela et al., 2016).4,5 With a reduced genetic material, the beneficiary organism fitness is improved, at the risk of being dependent on the helpers presence in their environment. The conditions in which patterns of such [[division of labor (DOL)]] arise are still obscure, but its advantages for bacterial population are clear: DOL allows to diminish the cost associated to certain functions and the possibility of cohabitation of various mutants/specialized cells within the population to respond as a whole to environmental constraints, and thrive. New technologies allow us to access within-species diversity and study the possible metabolic specialization between cells. Single-cell -omics have been developed for this purpose in human health and are now applied to microbial systems. However, analyzing such datasets still requires custom pipelines to respond to the specificity of bacterial biology and technical challenges.\nThe goal of this internship is to explore [[scRNA-seq]] (single-cell RNA-seq) datasets of [[Pseudomonas brassicacearum]], a root colonizer. The student will analyse samples datasets from various nutritional conditions to determine if DOL can be detected within this species as a strategy for efficient root colonization.  The intern will have to implement transcriptomic data analyses from ultra-high throughput sequence run(s). Thus the main aim of the intern will be to set up bioinformatic workflow(s) from existing tools to produce interpretable results.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/01-Introduction.html#litterature-review",
    "href": "chapters/01-Introduction.html#litterature-review",
    "title": "1  Introduction",
    "section": "",
    "text": "1. Kuchina, A. et al. Microbial single-cell RNA sequencing by split-pool barcoding. Science 371, eaba5257 (2021).\n\n\n2. Gaisser, K. D. et al. High-throughput single-cell transcriptomics of bacteria using combinatorial barcoding. Nature Protocols 19, 3048–3084 (2024).\n\n\n3. Morris, J. J., Lenski, R. E. & Zinser, E. R. The black queen hypothesis: Evolution of dependencies through adaptive gene loss. mBio 3, e00036–12 (2012).\n\n\n4. Morris, E. K. et al. Choosing and using diversity indices: insights for ecological applications from the German Biodiversity Exploratories. Ecology and Evolution 4, 3514–3524 (2014).\n\n\n5. Estrela, S., Kerr, B. & Morris, J. J. Transitions in individuality through symbiosis. Current Opinion in Microbiology 31, 191–198 (2016).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/02-Materials-and-methods.html",
    "href": "chapters/02-Materials-and-methods.html",
    "title": "2  Materials and Methods",
    "section": "",
    "text": "2.1 Materials",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Materials and Methods</span>"
    ]
  },
  {
    "objectID": "chapters/03-Results.html",
    "href": "chapters/03-Results.html",
    "title": "3  Results",
    "section": "",
    "text": "3.1 Overview\nThis chapter presents the findings of our single-cell RNA-seq analysis of Pseudomonas, focusing on the division of labor within bacterial populations.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "chapters/03-Results.html#single-cell-rna-seq-analysis",
    "href": "chapters/03-Results.html#single-cell-rna-seq-analysis",
    "title": "3  Results",
    "section": "3.2 Single-cell RNA-seq Analysis",
    "text": "3.2 Single-cell RNA-seq Analysis\n\nData Quality and Preprocessing\n\n\nCell Type Identification\n\n\nDifferential Expression Analysis\n\n\nDivision of Labor Patterns",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "chapters/03-Results.html#functional-analysis",
    "href": "chapters/03-Results.html#functional-analysis",
    "title": "3  Results",
    "section": "3.3 Functional Analysis",
    "text": "3.3 Functional Analysis\n\nPathway Enrichment\n\n\nGene Set Analysis\n\n\nRegulatory Network Analysis",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "chapters/03-Results.html#integration-with-previous-studies",
    "href": "chapters/03-Results.html#integration-with-previous-studies",
    "title": "3  Results",
    "section": "3.4 Integration with Previous Studies",
    "text": "3.4 Integration with Previous Studies",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "chapters/03-Results.html#summary-of-key-findings",
    "href": "chapters/03-Results.html#summary-of-key-findings",
    "title": "3  Results",
    "section": "3.5 Summary of Key Findings",
    "text": "3.5 Summary of Key Findings",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "chapters/04-Discussion.html",
    "href": "chapters/04-Discussion.html",
    "title": "Msc Bioinformatics thesis",
    "section": "",
    "text": "from plotly.basedatatypes import BaseTraceHierarchyType as _BaseTraceHierarchyType import copy as _copy\nclass Line(_BaseTraceHierarchyType):\n# class properties\n# --------------------\n_parent_path_str = \"violin.marker\"\n_path_str = \"violin.marker.line\"\n_valid_props = {\"color\", \"outliercolor\", \"outlierwidth\", \"width\"}\n\n# color\n# -----\n@property\ndef color(self):\n    \"\"\"\n    Sets the marker.line color. It accepts either a specific color\n    or an array of numbers that are mapped to the colorscale\n    relative to the max and min values of the array or relative to\n    `marker.line.cmin` and `marker.line.cmax` if set.\n\n    The 'color' property is a color and may be specified as:\n      - A hex string (e.g. '#ff0000')\n      - An rgb/rgba string (e.g. 'rgb(255,0,0)')\n      - An hsl/hsla string (e.g. 'hsl(0,100%,50%)')\n      - An hsv/hsva string (e.g. 'hsv(0,100%,100%)')\n      - A named CSS color:\n            aliceblue, antiquewhite, aqua, aquamarine, azure,\n            beige, bisque, black, blanchedalmond, blue,\n            blueviolet, brown, burlywood, cadetblue,\n            chartreuse, chocolate, coral, cornflowerblue,\n            cornsilk, crimson, cyan, darkblue, darkcyan,\n            darkgoldenrod, darkgray, darkgrey, darkgreen,\n            darkkhaki, darkmagenta, darkolivegreen, darkorange,\n            darkorchid, darkred, darksalmon, darkseagreen,\n            darkslateblue, darkslategray, darkslategrey,\n            darkturquoise, darkviolet, deeppink, deepskyblue,\n            dimgray, dimgrey, dodgerblue, firebrick,\n            floralwhite, forestgreen, fuchsia, gainsboro,\n            ghostwhite, gold, goldenrod, gray, grey, green,\n            greenyellow, honeydew, hotpink, indianred, indigo,\n            ivory, khaki, lavender, lavenderblush, lawngreen,\n            lemonchiffon, lightblue, lightcoral, lightcyan,\n            lightgoldenrodyellow, lightgray, lightgrey,\n            lightgreen, lightpink, lightsalmon, lightseagreen,\n            lightskyblue, lightslategray, lightslategrey,\n            lightsteelblue, lightyellow, lime, limegreen,\n            linen, magenta, maroon, mediumaquamarine,\n            mediumblue, mediumorchid, mediumpurple,\n            mediumseagreen, mediumslateblue, mediumspringgreen,\n            mediumturquoise, mediumvioletred, midnightblue,\n            mintcream, mistyrose, moccasin, navajowhite, navy,\n            oldlace, olive, olivedrab, orange, orangered,\n            orchid, palegoldenrod, palegreen, paleturquoise,\n            palevioletred, papayawhip, peachpuff, peru, pink,\n            plum, powderblue, purple, red, rosybrown,\n            royalblue, rebeccapurple, saddlebrown, salmon,\n            sandybrown, seagreen, seashell, sienna, silver,\n            skyblue, slateblue, slategray, slategrey, snow,\n            springgreen, steelblue, tan, teal, thistle, tomato,\n            turquoise, violet, wheat, white, whitesmoke,\n            yellow, yellowgreen\n\n    Returns\n    -------\n    str\n    \"\"\"\n    return self[\"color\"]\n\n@color.setter\ndef color(self, val):\n    self[\"color\"] = val\n\n# outliercolor\n# ------------\n@property\ndef outliercolor(self):\n    \"\"\"\n    Sets the border line color of the outlier sample points.\n    Defaults to marker.color\n\n    The 'outliercolor' property is a color and may be specified as:\n      - A hex string (e.g. '#ff0000')\n      - An rgb/rgba string (e.g. 'rgb(255,0,0)')\n      - An hsl/hsla string (e.g. 'hsl(0,100%,50%)')\n      - An hsv/hsva string (e.g. 'hsv(0,100%,100%)')\n      - A named CSS color:\n            aliceblue, antiquewhite, aqua, aquamarine, azure,\n            beige, bisque, black, blanchedalmond, blue,\n            blueviolet, brown, burlywood, cadetblue,\n            chartreuse, chocolate, coral, cornflowerblue,\n            cornsilk, crimson, cyan, darkblue, darkcyan,\n            darkgoldenrod, darkgray, darkgrey, darkgreen,\n            darkkhaki, darkmagenta, darkolivegreen, darkorange,\n            darkorchid, darkred, darksalmon, darkseagreen,\n            darkslateblue, darkslategray, darkslategrey,\n            darkturquoise, darkviolet, deeppink, deepskyblue,\n            dimgray, dimgrey, dodgerblue, firebrick,\n            floralwhite, forestgreen, fuchsia, gainsboro,\n            ghostwhite, gold, goldenrod, gray, grey, green,\n            greenyellow, honeydew, hotpink, indianred, indigo,\n            ivory, khaki, lavender, lavenderblush, lawngreen,\n            lemonchiffon, lightblue, lightcoral, lightcyan,\n            lightgoldenrodyellow, lightgray, lightgrey,\n            lightgreen, lightpink, lightsalmon, lightseagreen,\n            lightskyblue, lightslategray, lightslategrey,\n            lightsteelblue, lightyellow, lime, limegreen,\n            linen, magenta, maroon, mediumaquamarine,\n            mediumblue, mediumorchid, mediumpurple,\n            mediumseagreen, mediumslateblue, mediumspringgreen,\n            mediumturquoise, mediumvioletred, midnightblue,\n            mintcream, mistyrose, moccasin, navajowhite, navy,\n            oldlace, olive, olivedrab, orange, orangered,\n            orchid, palegoldenrod, palegreen, paleturquoise,\n            palevioletred, papayawhip, peachpuff, peru, pink,\n            plum, powderblue, purple, red, rosybrown,\n            royalblue, rebeccapurple, saddlebrown, salmon,\n            sandybrown, seagreen, seashell, sienna, silver,\n            skyblue, slateblue, slategray, slategrey, snow,\n            springgreen, steelblue, tan, teal, thistle, tomato,\n            turquoise, violet, wheat, white, whitesmoke,\n            yellow, yellowgreen\n\n    Returns\n    -------\n    str\n    \"\"\"\n    return self[\"outliercolor\"]\n\n@outliercolor.setter\ndef outliercolor(self, val):\n    self[\"outliercolor\"] = val\n\n# outlierwidth\n# ------------\n@property\ndef outlierwidth(self):\n    \"\"\"\n    Sets the border line width (in px) of the outlier sample\n    points.\n\n    The 'outlierwidth' property is a number and may be specified as:\n      - An int or float in the interval [0, inf]\n\n    Returns\n    -------\n    int|float\n    \"\"\"\n    return self[\"outlierwidth\"]\n\n@outlierwidth.setter\ndef outlierwidth(self, val):\n    self[\"outlierwidth\"] = val\n\n# width\n# -----\n@property\ndef width(self):\n    \"\"\"\n    Sets the width (in px) of the lines bounding the marker points.\n\n    The 'width' property is a number and may be specified as:\n      - An int or float in the interval [0, inf]\n\n    Returns\n    -------\n    int|float\n    \"\"\"\n    return self[\"width\"]\n\n@width.setter\ndef width(self, val):\n    self[\"width\"] = val\n\n# Self properties description\n# ---------------------------\n@property\ndef _prop_descriptions(self):\n    return \"\"\"\\\n    color\n        Sets the marker.line color. It accepts either a\n        specific color or an array of numbers that are mapped\n        to the colorscale relative to the max and min values of\n        the array or relative to `marker.line.cmin` and\n        `marker.line.cmax` if set.\n    outliercolor\n        Sets the border line color of the outlier sample\n        points. Defaults to marker.color\n    outlierwidth\n        Sets the border line width (in px) of the outlier\n        sample points.\n    width\n        Sets the width (in px) of the lines bounding the marker\n        points.\n    \"\"\"\n\ndef __init__(\n    self,\n    arg=None,\n    color=None,\n    outliercolor=None,\n    outlierwidth=None,\n    width=None,\n    **kwargs,\n):\n    \"\"\"\n    Construct a new Line object\n\n    Parameters\n    ----------\n    arg\n        dict of properties compatible with this constructor or\n        an instance of\n        :class:`plotly.graph_objs.violin.marker.Line`\n    color\n        Sets the marker.line color. It accepts either a\n        specific color or an array of numbers that are mapped\n        to the colorscale relative to the max and min values of\n        the array or relative to `marker.line.cmin` and\n        `marker.line.cmax` if set.\n    outliercolor\n        Sets the border line color of the outlier sample\n        points. Defaults to marker.color\n    outlierwidth\n        Sets the border line width (in px) of the outlier\n        sample points.\n    width\n        Sets the width (in px) of the lines bounding the marker\n        points.\n\n    Returns\n    -------\n    Line\n    \"\"\"\n    super(Line, self).__init__(\"line\")\n\n    if \"_parent\" in kwargs:\n        self._parent = kwargs[\"_parent\"]\n        return\n\n    # Validate arg\n    # ------------\n    if arg is None:\n        arg = {}\n    elif isinstance(arg, self.__class__):\n        arg = arg.to_plotly_json()\n    elif isinstance(arg, dict):\n        arg = _copy.copy(arg)\n    else:\n        raise ValueError(\n            \"\"\"\\\nThe first argument to the plotly.graph_objs.violin.marker.Line constructor must be a dict or an instance of :class:plotly.graph_objs.violin.marker.Line““” )\n    # Handle skip_invalid\n    # -------------------\n    self._skip_invalid = kwargs.pop(\"skip_invalid\", False)\n    self._validate = kwargs.pop(\"_validate\", True)\n\n    # Populate data dict with properties\n    # ----------------------------------\n    _v = arg.pop(\"color\", None)\n    _v = color if color is not None else _v\n    if _v is not None:\n        self[\"color\"] = _v\n    _v = arg.pop(\"outliercolor\", None)\n    _v = outliercolor if outliercolor is not None else _v\n    if _v is not None:\n        self[\"outliercolor\"] = _v\n    _v = arg.pop(\"outlierwidth\", None)\n    _v = outlierwidth if outlierwidth is not None else _v\n    if _v is not None:\n        self[\"outlierwidth\"] = _v\n    _v = arg.pop(\"width\", None)\n    _v = width if width is not None else _v\n    if _v is not None:\n        self[\"width\"] = _v\n\n    # Process unknown kwargs\n    # ----------------------\n    self._process_kwargs(**dict(arg, **kwargs))\n\n    # Reset skip_invalid\n    # ------------------\n    self._skip_invalid = False",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>04-Discussion.html</span>"
    ]
  },
  {
    "objectID": "chapters/05-Conclusion-and-future-work.html",
    "href": "chapters/05-Conclusion-and-future-work.html",
    "title": "5  Conclusion and Future Work",
    "section": "",
    "text": "5.1 Summary of Main Findings",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion and Future Work</span>"
    ]
  },
  {
    "objectID": "chapters/05-Conclusion-and-future-work.html#summary-of-main-findings",
    "href": "chapters/05-Conclusion-and-future-work.html#summary-of-main-findings",
    "title": "5  Conclusion and Future Work",
    "section": "",
    "text": "Key Discoveries\n\n\nMethodological Contributions\n\n\nBiological Insights",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion and Future Work</span>"
    ]
  },
  {
    "objectID": "chapters/05-Conclusion-and-future-work.html#impact-on-the-field",
    "href": "chapters/05-Conclusion-and-future-work.html#impact-on-the-field",
    "title": "5  Conclusion and Future Work",
    "section": "5.2 Impact on the Field",
    "text": "5.2 Impact on the Field\n\nContribution to Single-cell RNA-seq Methodology\n\n\nContribution to Pseudomonas Research\n\n\nBroader Implications for Microbial Ecology",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion and Future Work</span>"
    ]
  },
  {
    "objectID": "chapters/05-Conclusion-and-future-work.html#future-research-directions",
    "href": "chapters/05-Conclusion-and-future-work.html#future-research-directions",
    "title": "5  Conclusion and Future Work",
    "section": "5.3 Future Research Directions",
    "text": "5.3 Future Research Directions\n\nTechnical Improvements\n\n\nBiological Questions to Address\n\n\nPotential Applications",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion and Future Work</span>"
    ]
  },
  {
    "objectID": "chapters/05-Conclusion-and-future-work.html#final-remarks",
    "href": "chapters/05-Conclusion-and-future-work.html#final-remarks",
    "title": "5  Conclusion and Future Work",
    "section": "5.4 Final Remarks",
    "text": "5.4 Final Remarks",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion and Future Work</span>"
    ]
  },
  {
    "objectID": "chapters/05-Conclusion-and-future-work.html#references",
    "href": "chapters/05-Conclusion-and-future-work.html#references",
    "title": "5  Conclusion and Future Work",
    "section": "5.5 References",
    "text": "5.5 References",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion and Future Work</span>"
    ]
  },
  {
    "objectID": "chapters/06-References.html",
    "href": "chapters/06-References.html",
    "title": "Bibliography",
    "section": "",
    "text": "1. Kuchina, A. et al. Microbial single-cell RNA\nsequencing by split-pool barcoding. Science\n371, eaba5257 (2021).\n\n\n2. Gaisser, K. D. et al. High-throughput\nsingle-cell transcriptomics of bacteria using combinatorial\nbarcoding. Nature Protocols 19, 3048–3084\n(2024).\n\n\n3. Morris, E. K. et al. Choosing and using diversity\nindices: insights for ecological applications from the German\nBiodiversity Exploratories. Ecology and Evolution\n4, 3514–3524 (2014).\n\n\n4. Morris, J. J., Lenski, R. E. & Zinser, E.\nR. The black queen\nhypothesis: Evolution of dependencies through adaptive gene loss.\nmBio 3, e00036–12 (2012).\n\n\n5. Estrela, S., Kerr, B. & Morris, J. J. Transitions in\nindividuality through symbiosis. Current Opinion in\nMicrobiology 31, 191–198 (2016).",
    "crumbs": [
      "Bibliography"
    ]
  }
]