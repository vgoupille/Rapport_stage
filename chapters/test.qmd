# Discussion

This study aimed to validate the microSPLiT technology for exploring division of labor (DOL) within bacterial populations, specifically *Pseudomonas brassicacearum* R401. While a comprehensive DOL analysis remains to be conducted, our work has successfully established a robust analysis pipeline and generated promising initial data that provide valuable insights into bacterial single-cell transcriptomics.

## Technical Validation of microSPLiT Methodology

The microSPLiT methodology performed as anticipated, with sequencing and trimming steps effectively removing adapters and yielding high-quality reads suitable for alignment to the *PsR401* genome using STARsolo. The successful implementation of this technology represents a significant step forward in bacterial single-cell analysis, particularly given the technical challenges associated with prokaryotic systems compared to eukaryotic counterparts [@nishimura2025]. While the current pipeline achieved good results (@fig-adaptateur @tbl-summary @tbl-starsolo-comprehensive), there are opportunities to further optimize read recovery. STARsolo's reliance on fixed barcode positions could be complemented by implementing BarQC [@rossello], which would enable recovery of shifted barcodes utilizing CIGAR motif analysis and thus increase the overall yield of usable reads. BarQC would also provide visual representations of read proportions in each well at every barcoding round, facilitating the assessment of potential biases in cell distribution or barcoding efficiency. We can also imagine implementing comprehensive quality control measures, including contamination screening tools such as FastQ Screen [@wingett2018], Centrifuge [@kim2016] or Recentrifuge [@mart√≠2019], would improve data reliability.

The presence of a significant proportion of ribosomal RNA reads (~28%) @fig-transcriptome was expected but highlights an opportunity for optimization [@nishimura2025]. Implementing upstream rRNA depletion could substantially increase mRNA yield , thereby enhancing the biological signal available for transcriptomic analysis. Additionally, the recent availability of an updated genome annotation presents an opportunity to improve the accuracy of gene quantification in future analyses.

## Transcriptomic Responses to Iron Limitation

Our analysis revealed clear transcriptomic distinctions between experimental conditions, with cells grown in iron-limited medium at timepoints 2 and 3 showing fewer detected genes and lower total UMI counts compared to iron-rich conditions @fig-final_filtering. This observation necessitated the adaptation of filtering thresholds per condition to maintain comparable cell distributions across samples, ultimately retaining 160 cells per condition for a total of 3000 cells.

The PCA and UMAP analyses demonstrated that despite the first principal component explaining only a small fraction of variance (\~0.6%), typical for bacterial scRNA-seq datasets, it effectively distinguished between M9 (iron-poor) and M9F (iron-rich) conditions @fig-single-cell-PCA @fig-pca1-summary-top. The distinct transcriptomic profiles observed in cells from M9 T2 and T3 compared to M9 T1 or M9F support the hypothesis that T1 cells in depleted medium had not yet exhausted residual iron resources. This interpretation is corroborated by optical density measurements, which plateaued at T2 and T3, indicating growth limitation.

Analysis of the most contributive genes @fig-pca1-summary-top to condition separation revealed an enrichment of genes related to translation machinery, protein chaperones, siderophore biosynthesis regulators, and iron acquisition receptors. This pattern indicates an adaptive metabolic reorganization under iron stress, consistent with previous studies demonstrating that iron limitation triggers comprehensive cellular reprogramming in bacteria [@lim2012].

Differential expression analysis confirmed the downregulation of ribosomal protein genes, including RplA, under iron stress conditions, alongside the relative upregulation of genes involved in storage metabolism and stress response mechanisms. This transcriptional shift reflects the cellular transition from active growth to survival-oriented metabolism, characterized by reduced protein synthesis and enhanced stress protection mechanisms. Such responses align with established paradigms of bacterial stress adaptation, where resource limitation drives cells toward quiescence and dormancy states [@rittershaus2013]. The coarse-grained clustering approach employed in this study, while revealing global transcriptional differences between major experimental groups, may mask important biological heterogeneity that could indicate DOL mechanisms. To address our original biological question about cellular specialization within bacterial populations, future analyses must examine finer-scale heterogeneity by analyzing individual culture conditions and biological replicates at each timepoint. This approach would be necessary to identify potential subpopulations that might reveal specialized cellular functions and DOL patterns within *P. brassicacearum* populations.

## Methodological Considerations and Limitations

The analysis of approximately 3000 cells, yielding ~160 cells per condition after filtering, raises important questions about statistical power and biological interpretation. The sufficiency of this cell number for detecting DOL, particularly if it involves minor subpopulations of specialized cells, remains uncertain. The absence of clear clustering beyond condition-based separation could reflect several factors: the inherently noisy nature of bacterial gene regulation, insufficient sampling depth, or the use of culture conditions that lack sufficient environmental heterogeneity to drive cellular specialization.

The estimation of unique cell numbers through barcode analysis presents ongoing challenges, as the distinction between genuine single cells and cell aggregates or artifacts remains difficult to establish definitively. The subjective nature of filtering methods compounds this issue, as cells deemed "low quality" in non-stressed conditions might represent biologically relevant states, such as dormant or stress-adapted phenotypes that could contribute to population-level DOL.

Compared to eukaryotic single-cell studies that routinely analyze hundreds of thousands to millions of cells, our prokaryotic dataset appears modest. However, the smaller genome size of bacteria offers advantages for local computational analysis and may provide pedagogical value for method development and training purposes. 


Several technological and methodological improvements could enhance future investigations of bacterial DOL using single-cell approaches. If the experiment were to be repeated, it would be beneficial to include bulk and blank samples to improve statistical power [@cyriaque2024]. 

The complete testing of the bacSC pipeline would also be valuable, though modifications to the code were necessary due to incompatibilities with recent numpy versions for sparse matrix handling. Future analyses should focus on performing DOL analysis by studying each sample independently. Subsequently, comprehensive analyses including Gene Ontology, cell trajectory inference, metabolomic pathway analysis, and pseudobulk analysis would provide deeper insights into bacterial population dynamics .






```{mermaid}
flowchart TD
 subgraph subGraph0["Input Samples"]
        A1["BC_0076 FASTQ<br>R1 + R2 files"]
        A2["BC_0077 FASTQ<br>R1 + R2 files"]
        A3["BC_0078 FASTQ<br>R1 + R2 files"]
        A4["BC_0079 FASTQ<br>R1 + R2 files"]
  end
    A1 --> B["Quality Control<br>FastQC and MultiQC"]
    A2 --> B
    A3 --> B
    A4 --> B
    B --> C["Trimming<br>Cutadapt and Fastp"]
    C --> D["Post-trimming QC"]
    D --> E["Merge R1 and R2 Files"]
    E --> F["2 merged FASTQ<br>1 R1 + 1 R2"]
    F --> G["STARsolo<br>Alignment + Barcode Reading<br>+ Cell-Gene Matrix"]
    G --> H["Data Conversion<br>Seurat / AnnData objects"]
    H --> H1["add metadata"]
    H1 --> I["Quality Control <br>Cell and Gene filtering"]
    I --> L1["Single-cell"] & L2["Pseudobulk"]
    L1 --> K["Sub/population clustering"] & P["Diffusion pseudotime, Trajectory inference"]
    K --> M["Differential Expression<br>Co-expression Analysis<br>Gene Ontology Analysis"]
    L2 --> M
     A1:::input
     A2:::input
     A3:::input
     A4:::input
     B:::preprocessing
     C:::preprocessing
     D:::preprocessing
     E:::preprocessing
     F:::merged
     G:::alignment
     H:::conversion
     H1:::conversion
     I:::filtering
     L1:::preparation
     L2:::preparation
     K:::clustering
     P:::trajectory
     M:::analysis
    classDef input fill:#e3f2fd,stroke:#1976d2,stroke-width:2px
    classDef preprocessing fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px
    classDef merged fill:#e3f2fd,stroke:#1976d2,stroke-width:2px
    classDef alignment fill:#fff3e0,stroke:#f57c00,stroke-width:2px
    classDef conversion fill:#fce4ec,stroke:#c2185b,stroke-width:2px
    classDef filtering fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px
    classDef clustering fill:#fff3e0,stroke:#f57c00,stroke-width:2px
    classDef preparation fill:#e1f5fe,stroke:#0277bd,stroke-width:2px
    classDef analysis fill:#fff8e1,stroke:#f9a825,stroke-width:2px
    classDef trajectory fill:#fff3e0,stroke:#f57c00,stroke-width:2px

```


```{mermaid}
flowchart TD
 subgraph subGraph0["Input Samples"]
        A1["BC_0076 FASTQ<br>R1 + R2 files"]
        A2["BC_0077 FASTQ<br>R1 + R2 files"]
        A3["BC_0078 FASTQ<br>R1 + R2 files"]
        A4["BC_0079 FASTQ<br>R1 + R2 files"]
  end
    A1 --> B["Quality Control<br>FastQC and MultiQC"]
    A2 --> B
    A3 --> B
    A4 --> B
    B --> C["Trimming<br>Cutadapt and Fastp"]
    C --> D["Post-trimming QC"]
    D --> E["Merge R1 and R2 Files"]
    E --> F["2 merged FASTQ<br>1 R1 + 1 R2"]
    F --> G["STARsolo<br>Alignment + Barcode Reading<br>+ Cell-Gene Matrix"]
    G --> H["Data Conversion<br>Seurat / AnnData objects"]
    H --> H1["add metadata"]
    H1 --> I["Quality Control <br>Cell and Gene filtering"]
    I --> L1["Single-cell"]
    L1 --> K["Sub/population clustering"]
    K --> M["Differential Expression"]
     A1:::input
     A2:::input
     A3:::input
     A4:::input
     B:::preprocessing
     C:::preprocessing
     D:::preprocessing
     E:::preprocessing
     F:::merged
     G:::alignment
     H:::conversion
     H1:::conversion
     I:::filtering
     L1:::preparation
     K:::clustering
     M:::analysis
    classDef input fill:#e3f2fd,stroke:#1976d2,stroke-width:2px
    classDef preprocessing fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px
    classDef merged fill:#e3f2fd,stroke:#1976d2,stroke-width:2px
    classDef alignment fill:#fff3e0,stroke:#f57c00,stroke-width:2px
    classDef conversion fill:#fce4ec,stroke:#c2185b,stroke-width:2px
    classDef filtering fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px
    classDef clustering fill:#fff3e0,stroke:#f57c00,stroke-width:2px
    classDef preparation fill:#e1f5fe,stroke:#0277bd,stroke-width:2px
    classDef analysis fill:#fff8e1,stroke:#f9a825,stroke-width:2px

```